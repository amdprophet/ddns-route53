name: build

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags:
      - v*

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      -
        name: Dump GitHub env
        run: |
          env
      -
        name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
      -
        name: Init (push branch)
        if: startsWith(github.ref, 'refs/heads/')
        run: |
          echo "##[set-env name=VERSION;]${GITHUB_REF#refs/heads/}"
      -
        name: Init (push tag)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "##[set-env name=TAG_NAME;]${GITHUB_REF#refs/tags/}"
          echo "##[set-env name=VERSION;]${GITHUB_REF#refs/tags/v}"
      -
        name: Init (pull request)
        if: github.event_name == 'pull_request'
        run: |
          echo "##[set-env name=VERSION;]PR-$(basename ${{ github.event.pull_request.url }})"
      -
        name: Set up Docker
        run: |
          echo "##[set-env name=DOCKER_USERNAME;]crazymax"
          echo "##[set-env name=DOCKER_IMAGE;]crazymax/${{ github.event.repository.name }}"
          echo "##[set-env name=QUAY_USERNAME;]crazymax"
          echo "##[set-env name=QUAY_IMAGE;]quay.io/crazymax/${{ github.event.repository.name }}"
      -
        name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.12.4
      -
        name: Set GOPATH
        # temporary fix (see https://github.com/actions/setup-go/issues/14)
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
      -
        name: Checkout
        uses: actions/checkout@v1
      -
        name: GoReleaser
        run: |
          curl -sfL https://install.goreleaser.com/github.com/goreleaser/goreleaser.sh | sh -s v0.117.0
          if [[ -z "$TAG_NAME" ]]; then
            echo GoReleaser Snapshot
            ./bin/goreleaser release --snapshot --rm-dist
          else
            echo GoReleaser Release
            ./bin/goreleaser release --skip-publish --rm-dist
            rm -f dist/CHANGELOG.md dist/config.yaml
          fi
          ls -al dist/
      -
        name: Docker Build
        run: |
          docker build \
            --build-arg VERSION=${VERSION} \
            --label "org.label-schema.build-date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
            --label "org.label-schema.version=${VERSION}" \
            --label "org.label-schema.vcs-ref=${GITHUB_SHA::8}" \
            -t docker_build -f Dockerfile .
          docker image inspect docker_build
      -
        name: Docker Tags
        if: success()
        run: |
          docker tag docker_build ${DOCKER_IMAGE}:${VERSION}
          docker tag docker_build ${QUAY_IMAGE}:${VERSION}
          docker image ls | grep ${{ github.event.repository.name }}
      -
        name: Docker Tags (push tag)
        if: success() && startsWith(github.ref, 'refs/tags/v')
        run: |
          docker tag docker_build ${DOCKER_IMAGE}:latest
          docker tag docker_build ${QUAY_IMAGE}:latest
          docker image ls | grep ${{ github.event.repository.name }}
      -
        name: GitHub Release
        if: success() && startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          go get -u github.com/tcnksm/ghr
          ghr --version
          ghr -n ${TAG_NAME} -draft ${TAG_NAME} dist/
      -
        name: Docker Login
        if: success() && startsWith(github.ref, 'refs/tags/v')
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin
          echo "${QUAY_PASSWORD}" | docker login quay.io --username "${QUAY_USERNAME}" --password-stdin
      -
        name: Docker Push
        if: success() && startsWith(github.ref, 'refs/tags/v')
        run: |
          docker push ${DOCKER_IMAGE}
          docker push ${QUAY_IMAGE}
